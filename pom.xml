<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.3</version>
        <relativePath /> <!-- lookup parent from repository -->
    </parent>
    <groupId>org.tantama.anchoco</groupId>
    <artifactId>spring-anchoco</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>spring-anchoco</name>
    <description>spring boot 用のあんちょこ</description>
    <properties>
        <java.version>11</java.version>
        <awssdk.version>2.16.16</awssdk.version>
        <resilience4j.version>1.7.0</resilience4j.version>
        <maven-checkstyle-plugin.version>3.1.2</maven-checkstyle-plugin.version>
        <spotbugs-maven-plugin.version>4.2.0</spotbugs-maven-plugin.version>
        <mockserver.version>5.11.2</mockserver.version>
        <univapay.version>0.2.15</univapay.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- amazon sdk -->
            <dependency>
                <groupId>software.amazon.awssdk</groupId>
                <artifactId>bom</artifactId>
                <version>${awssdk.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- resilience4j -->
            <!-- 流量制限/サーキットブレイカー/リトライのライブラリ resilience4j -->
            <dependency>
                <groupId>io.github.resilience4j</groupId>
                <artifactId>resilience4j-bom</artifactId>
                <version>${resilience4j.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- aop -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>

        <!-- apache common3. -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>

        <!-- amazon sdk. -->
        <dependency>
            <groupId>software.amazon.awssdk</groupId>
            <artifactId>secretsmanager</artifactId>
        </dependency>

        <!-- resilience4j. -->
        <dependency>
            <groupId>io.github.resilience4j</groupId>
            <artifactId>resilience4j-retry</artifactId>
        </dependency>

        <!-- mock server. -->
        <dependency>
            <groupId>org.mock-server</groupId>
            <artifactId>mockserver-client-java</artifactId>
            <version>${mockserver.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mock-server</groupId>
            <artifactId>mockserver-netty</artifactId>
            <version>${mockserver.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- ldap -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-ldap</artifactId>
        </dependency>

        <!-- ffmpeg -->
        <dependency>
            <groupId>org.bytedeco</groupId>
            <artifactId>ffmpeg-platform</artifactId>
            <version>4.3.2-1.5.5</version>
        </dependency>

        <!-- univapay -->
        <dependency>
            <groupId>com.univapay</groupId>
            <artifactId>univapay-java-sdk</artifactId>
            <version>${univapay.version}</version>
        </dependency>
        
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <!-- ビルド時にcheck styleでの静的チェック -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <configuration>
                    <configLocation>${basedir}/tools/anchoco_checkstyle.xml</configLocation>
                    <violationSeverity>warning</violationSeverity>
                </configuration>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- ビルド時にspot bugsでの静的チェック -->
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>${spotbugs-maven-plugin.version}</version>
                <configuration>
                    <excludeFilterFile>${basedir}/tools/spotbugs_exclude.xml</excludeFilterFile>
                </configuration>
                <executions>
                    <execution>
                        <phase>test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <!-- maven build switch profile example -->
    <!-- ex. mvn package -P dev -e -->
    <!-- 組み込みtomcat jar -->
    <!-- <profiles> -->
    <!-- <profile> -->
    <!-- <id>local</id> -->
    <!-- <activation> -->
    <!-- <activeByDefault>true</activeByDefault> -->
    <!-- </activation> -->
    <!-- <properties> -->
    <!-- <activatedProperties>local</activatedProperties> -->
    <!-- </properties> -->
    <!-- </profile> -->
    <!-- <profile> -->
    <!-- <id>dev</id> -->
    <!-- <properties> -->
    <!-- <activatedProperties>dev</activatedProperties> -->
    <!-- </properties> -->
    <!-- </profile> -->
    <!-- </profiles> -->
    <!-- use war -->
    <!-- <profiles> -->
    <!-- <profile> -->
    <!-- <id>local</id> -->
    <!-- <activation> -->
    <!-- <activeByDefault>true</activeByDefault> -->
    <!-- </activation> -->
    <!-- <build> -->
    <!-- <resources> -->
    <!-- <resource> -->
    <!-- <directory>src/main/resources</directory> -->
    <!-- </resource> -->
    <!-- </resources> -->
    <!-- </build> -->
    <!-- </profile> -->
    <!-- <profile> -->
    <!-- <id>dev</id> -->
    <!-- <build> -->
    <!-- <resources> -->
    <!-- <resource> -->
    <!-- src/main/resources にsrc/dev/resourcesのファイルを上書き配置する -->
    <!-- <directory>src/dev/resources</directory> -->
    <!-- </resource> -->
    <!-- <resource> -->
    <!-- <directory>src/main/resources</directory> -->
    <!-- </resource> -->
    <!-- </resources> -->
    <!-- </build> -->
    <!-- </profile> -->
    <!-- </profiles> -->


</project>
